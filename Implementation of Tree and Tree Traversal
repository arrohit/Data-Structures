class Node(object):
    
    def __init__(self,data):
        self.left=None
        self.right=None
        self.data=data
    def insert(self,data):
        if self.data:
            if data<self.data:
                if self.left is None:
                    self.left=Node(data)
                else:
                    self.left.insert(data)
            else:
                if self.right is None:
                    self.right=Node(data)
                else:
                    self.right.insert(data)
        else:
            self.data=data
    def printtree(self):
        if self.left:
            self.left.printtree()
        print(self.data)
        if self.right:
            self.right.printtree()
    def inordertraversal(self,root):
        res=[]
        if root:
            res=res+self.inordertraversal(root.left)
            res.append(root.data)
            res=res+ self.inordertraversal(root.right)
        return res
    def preordertraversal(self,root):
        res=[]
        if root:
            res.append(root.data)
            res=res+self.preordertraversal(root.left)
            res=res+self.preordertraversal(root.right)
        return res
    def postordertraversal(self,root):
        res=[]
        if root:
            res=res+self.postordertraversal(root.left)
            res=res+self.postordertraversal(root.right)
            res.append(root.data)
        return res
